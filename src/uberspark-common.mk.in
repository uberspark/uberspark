######
# common Makefile boilerplate for UberSpark
# author: amit vasudevan (amitvasudevan@acm.org)
######

###### autoconf controlled variables

export AC_PREFIX=@prefix@
export AC_UBERSPARK_BINDIR=@ubersparkbindir@
export AC_UBERSPARK_HOMEDIR=@ubersparkhomedir@
export AC_UBERSPARK_INCLUDEDIR=@ubersparkincludedir@
export AC_UBERSPARK_HWMDIR=@ubersparkhwmdir@
export AC_UBERSPARK_HWMINCLUDEDIR=@ubersparkhwmincludedir@
export AC_UBERSPARK_LIBSDIR=@ubersparklibsdir@
export AC_UBERSPARK_LIBSINCLUDESDIR=@ubersparklibsincludesdir@
export AC_UBERSPARK_TOOLSDIR=@ubersparktoolsdir@


export UBERSPARK_LOCAL_PATH := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

export UBERSPARK_TARGET_CPU := @TARGET_CPU@
export UBERSPARK_TARGET_CONTAINER := @TARGET_CONTAINER@
export UBERSPARK_TARGET_PLATFORM := @TARGET_PLATFORM@
export UBERSPARK_TARGET_TRIAD := $(UBERSPARK_TARGET_CPU)-$(UBERSPARK_TARGET_CONTAINER)-$(UBERSPARK_TARGET_PLATFORM)

export MAKE = @MAKE@
export OCAMLC = ocamlfind @OCAMLC@
export FRAMAC = @FRAMAC@
export CCERT = @CCERT@
export CC = @CC@
export AS = @AS@
export AR = @AR@
export LD = @LD@
export RM = @RM@
export CP = @CP@				
export MKDIR = @MKDIR@
export CAT = @CAT@


###### release variables
export USPARK_RELEASE_VERSION_MAJOR	:= 5
export USPARK_RELEASE_VERSION_MINOR := 0
export USPARK_RELEASE_CODENAME := Chase


###### local paths

export USPARK_LOCAL_BINDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_BINDIR)
export USPARK_LOCAL_INCLUDEDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_INCLUDEDIR)
export USPARK_LOCAL_HWMDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_HWMDIR)
export USPARK_LOCAL_HWMINCLUDEDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_HWMINCLUDEDIR)
export USPARK_LOCAL_LIBSDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_LIBSDIR)
export USPARK_LOCAL_LIBSINCLUDESDIR := $(UBERSPARK_LOCAL_PATH)$(AC_UBERSPARK_LIBSINCLUDESDIR)
export USPARK_LOCAL_TOOLSDIR := $(UBERSPARK_LOCAL_PATH)(AC_UBERSPARK_TOOLSDIR)


###### install paths

export USPARK_INSTALL_HOMEDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)
export USPARK_INSTALL_BINDIR := $(AC_PREFIX)$(AC_UBERSPARK_BINDIR)
export USPARK_INSTALL_INCLUDEDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_INCLUDEDIR)
export USPARK_INSTALL_HWMDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_HWMDIR)
export USPARK_INSTALL_HWMINCLUDEDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_HWMINCLUDEDIR)
export USPARK_INSTALL_LIBSDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_LIBSDIR)
export USPARK_INSTALL_LIBSINCLUDESDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_LIBSINCLUDESDIR)
export USPARK_INSTALL_TOOLSDIR := $(AC_PREFIX)$(AC_UBERSPARK_HOMEDIR)$(AC_UBERSPARK_TOOLSDIR)

###### compiler general definitions
export USPARK_COMPILER_DEFS := 
export USPARK_VERIFICATION_DEFS := 

ifeq ($(UBERSPARK_TARGET_CPU), x86)
	USPARK_COMPILER_DEFS += -D__XMHF_TARGET_CPU_X86__
	USPARK_VERIFICATION_DEFS += -cpp-extra-args=-D__XMHF_TARGET_CPU_X86__
endif

ifeq ($(UBERSPARK_TARGET_CONTAINER), vmx)
	USPARK_COMPILER_DEFS += -D__XMHF_TARGET_CONTAINER_VMX__
	USPARK_VERIFICATION_DEFS += -cpp-extra-args=-D__XMHF_TARGET_CONTAINER_VMX__
endif

ifeq ($(UBERSPARK_TARGET_PLATFORM), x86pc)
	USPARK_COMPILER_DEFS += -D__XMHF_TARGET_PLATFORM_X86PC__
	USPARK_VERIFICATION_DEFS += -cpp-extra-args=-D__XMHF_TARGET_PLATFORM_X86PC__
endif

ifeq ($(UBERSPARK_TARGET_TRIAD), x86-vmx-x86pc)
	USPARK_COMPILER_DEFS += -D__XMHF_TARGET_TRIAD_X86_VMX_X86PC__
	USPARK_VERIFICATION_DEFS += -cpp-extra-args=-D__XMHF_TARGET_TRIAD_X86_VMX_X86PC__
endif


###### compcert compiler base flags
CCERT_FLAGS = -fno-fpu
CCERT_FLAGS += -fbitfields
CCERT_FLAGS += -fpacked-structs
CCERT_FLAGS += -fstruct-return
CCERT_FLAGS += -fno-inline-asm
CCERT_FLAGS += -nostdinc


###### includes (local)

I_FLAGS_LOCAL = -I$(USPARK_LOCAL_INCLUDEDIR)
I_FLAGS_LOCAL += -I$(USPARK_LOCAL_HWMINCLUDEDIR)
I_FLAGS_LOCAL += -I$(USPARK_LOCAL_LIBSINCLUDESDIR)


###### includes

I_FLAGS = -I$(USPARK_INSTALL_INCLUDEDIR)
I_FLAGS += -I$(USPARK_INSTALL_HWMINCLUDEDIR)
I_FLAGS += -I$(USPARK_INSTALL_LIBSINCLUDESDIR)


###### compcert compiler includes

CCERT_FLAGS += $(I_FLAGS)

###### verification (frama-c) includes
export V_FLAGS := -cpp-extra-args=-D__XMHF_VERIFICATION__
V_FLAGS += -cpp-extra-args=-I$(USPARK_INSTALL_INCLUDEDIR)
V_FLAGS += -cpp-extra-args=-I$(USPARK_INSTALL_HWMINCLUDEDIR)
V_FLAGS += -cpp-extra-args=-I$(USPARK_INSTALL_LIBSINCLUDESDIR)
V_FLAGS += $(USPARK_VERIFICATION_DEFS)


###### regular c compiler includes
CC_FLAGS = -O
CC_FLAGS += -I$(USPARK_INSTALL_INCLUDEDIR)
CC_FLAGS += -I$(USPARK_INSTALL_HWMINCLUDEDIR)




###### compcert C and CASM flag definitions, assembly flag definitions
export CCERT_CFLAGS = -O $(CCERT_FLAGS) $(USPARK_COMPILER_DEFS) 
export CCERT_CASMFLAGS = -O0 $(CCERT_FLAGS) $(USPARK_COMPILER_DEFS)
export ASMFLAGS = $(I_FLAGS) $(USPARK_COMPILER_DEFS) -D__ASSEMBLY__
export ASMFLAGS_LOCAL = -nostdinc $(I_FLAGS_LOCAL) -I$(USPARK_LOCAL_LIBSDIR)/libxmhfc/include $(USPARK_COMPILER_DEFS) -D__ASSEMBLY__


export CC_CFLAGS = $(CC_FLAGS) $(USPARK_COMPILER_DEFS) 

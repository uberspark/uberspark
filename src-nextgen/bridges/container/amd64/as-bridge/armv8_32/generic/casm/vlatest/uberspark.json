/*
    uberSpark casm assembler bridge json definition
*/

{
		"uberspark.manifest.namespace" : "uberspark/bridges",
		"uberspark.manifest.version_min" : "any",
		"uberspark.manifest.version_max" : "any",

		"uberspark.bridge.namespace" : "uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/casm/vlatest",
		"uberspark.bridge.category" : "container",
		"uberspark.bridge.container_build_filename" : "uberspark_bridges.Dockerfile",

		"uberspark.bridge.targets" : [
			{
				"input" : ".cS",
				"output" : ".c",
				"cmd" : [
					"
						export var_bridge_source_files &&
						export var_bridge_include_dirs &&
						export vararray_bridge_include_dirs &&
						export include_prefix=\"-I\" &&
						export include_string &&
						var_bridge_include_dirs=\" @@BRIDGE_INCLUDE_DIRS@@ \" &&
						vararray_bridge_include_dirs=$(echo $var_bridge_include_dirs | tr \" \" \"\\n\") &&
						for include_dir_name in $vararray_bridge_include_dirs; do include_string=\"${include_string} ${include_prefix}${include_dir_name}\"; done &&
						var_bridge_source_files=\" @@BRIDGE_SOURCE_FILES@@ \" &&
						vararray_bridge_source_files=$(echo $var_bridge_source_files | tr \" \" \"\\n\") &&
						for source_file_name in $vararray_bridge_source_files; do echo \"CASM target: ${source_file_name} --> ${source_file_name%.*}.c ...\"  && cp -f ${source_file_name} ${source_file_name%.*}.c && frama-c -load-module @@BRIDGE_PLUGIN_DIR@@/as-bridge/Casmbridge -machdep gcc_x86_32 -kernel-msg-key pp -cpp-extra-args=\"$include_string\" ${source_file_name%.*}.c -casm-genc -root-dir @@BRIDGE_UBERSPARK_ROOT_DIR_PREFIX@@ -staging-dir @@BRIDGE_UBERSPARK_STAGING_DIR_PREFIX@@ -uobjcoll-ns @@BRIDGE_UOBJCOLL_NAMESPACE@@ -uobjcoll-platform-ns @@BRIDGE_UOBJCOLL_PLATFORM_NAMESPACE@@ -log-level @@BRIDGE_LOG_LEVEL@@ -casm-infile ${source_file_name%.*}.cS -casm-outfile ${source_file_name%.*}.c ; done
					"
				]
			},

			{
				"input" : ".cS",
				"output" : ".s",
				"cmd" : [
					"
						export var_bridge_source_files &&
						export var_bridge_include_dirs &&
						export vararray_bridge_include_dirs &&
						export include_prefix=\"-I\" &&
						export include_string &&
						var_bridge_include_dirs=\" @@BRIDGE_INCLUDE_DIRS@@ \" &&
						vararray_bridge_include_dirs=$(echo $var_bridge_include_dirs | tr \" \" \"\\n\") &&
						for include_dir_name in $vararray_bridge_include_dirs; do include_string=\"${include_string} ${include_prefix}${include_dir_name}\"; done &&
						var_bridge_source_files=\" @@BRIDGE_SOURCE_FILES@@ \" &&
						vararray_bridge_source_files=$(echo $var_bridge_source_files | tr \" \" \"\\n\") &&
						for source_file_name in $vararray_bridge_source_files; do echo \"CASM target: ${source_file_name} --> ${source_file_name%.*}.s ...\" && cp -f ${source_file_name} ${source_file_name%.*}.c && ccomp @@BRIDGE_INCLUDE_DIRS_WITH_PREFIX@@ -O0 -fpacked-structs -c -dmach ${source_file_name%.*}.c && export vtmp=`dirname ${source_file_name}` && vtmp1=`basename ${source_file_name}` && mv -f ${vtmp1%.*}.mach ${vtmp}/. 2>/dev/null; true  && frama-c -load-module @@BRIDGE_PLUGIN_DIR@@/as-bridge/Casmbridge -machdep gcc_x86_32 -kernel-msg-key pp -cpp-extra-args=\"$include_string\" ${source_file_name%.*}.c  -casm-genasm -root-dir @@BRIDGE_UBERSPARK_ROOT_DIR_PREFIX@@ -staging-dir @@BRIDGE_UBERSPARK_STAGING_DIR_PREFIX@@ -uobjcoll-ns @@BRIDGE_UOBJCOLL_NAMESPACE@@ -uobjcoll-platform-ns @@BRIDGE_UOBJCOLL_PLATFORM_NAMESPACE@@ -log-level @@BRIDGE_LOG_LEVEL@@ -casm-infile ${source_file_name%.*}.mach -casm-outfile ${source_file_name%.*}.s ; done
					"
				]
			},

			{
				"input" : ".cS",
				"output" : ".o",
				"cmd" : [
					"
						export var_bridge_source_files &&
						export var_bridge_include_dirs &&
						export vararray_bridge_include_dirs &&
						export include_prefix=\"-I\" &&
						export include_string &&
						var_bridge_include_dirs=\" @@BRIDGE_INCLUDE_DIRS@@ \" &&
						vararray_bridge_include_dirs=$(echo $var_bridge_include_dirs | tr \" \" \"\\n\") &&
						for include_dir_name in $vararray_bridge_include_dirs; do include_string=\"${include_string} ${include_prefix}${include_dir_name}\"; done &&
						var_bridge_source_files=\" @@BRIDGE_SOURCE_FILES@@ \" &&
						vararray_bridge_source_files=$(echo $var_bridge_source_files | tr \" \" \"\\n\") &&
						for source_file_name in $vararray_bridge_source_files; do echo \"CASM target: ${source_file_name} --> ${source_file_name%.*}.o ...\" && cp -f ${source_file_name} ${source_file_name%.*}.c && ccomp @@BRIDGE_INCLUDE_DIRS_WITH_PREFIX@@ -O0 -fpacked-structs -c -dmach ${source_file_name%.*}.c && rm -f ${source_file_name%.*}.o && export vtmp=`dirname ${source_file_name}` && vtmp1=`basename ${source_file_name}` && mv -f ${vtmp1%.*}.mach ${vtmp}/. 2>/dev/null; true  && frama-c -load-module @@BRIDGE_PLUGIN_DIR@@/as-bridge/Casmbridge -machdep gcc_x86_32 -kernel-msg-key pp -cpp-extra-args=\"$include_string\" ${source_file_name%.*}.c -casm-genasm -root-dir @@BRIDGE_UBERSPARK_ROOT_DIR_PREFIX@@ -staging-dir @@BRIDGE_UBERSPARK_STAGING_DIR_PREFIX@@ -uobjcoll-ns @@BRIDGE_UOBJCOLL_NAMESPACE@@ -uobjcoll-platform-ns @@BRIDGE_UOBJCOLL_PLATFORM_NAMESPACE@@ -log-level @@BRIDGE_LOG_LEVEL@@ -casm-infile ${source_file_name%.*}.mach -casm-outfile ${source_file_name%.*}.s && gcc @@BRIDGE_COMPILEDEFS_WITH_PREFIX@@ -m32 -c ${var_bridge_include_dirs_with_prefix} ${source_file_name%.*}.s -o ${source_file_name%.*}.o ; done
					"
				]
			}


		]

}
 
(*===========================================================================*)
(*===========================================================================*)
(*	uberSpark namespace interface implementation		 *)
(*	author: amit vasudevan (amitvasudevan@acm.org)							 *)
(*===========================================================================*)
(*===========================================================================*)


(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)
(* type definitions *)
(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)
type uberspark_action_processing_t =
	| Action_Processed
	| Action_Error
	| Action_Skipped



(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)
(* variable definitions *)
(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)



(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)
(* interface definitions *)
(*---------------------------------------------------------------------------*)
(*---------------------------------------------------------------------------*)
val initialize :
    Uberspark.Manifest.uberspark_manifest_var_t ->
     Uberspark.Manifest.uberspark_manifest_var_t ->
     (string * Uberspark.Manifest.uberspark_manifest_var_t) list ->
    (string * Uberspark.Manifest.uberspark_manifest_var_t) list ->
    ((string, Uberspark.Manifest.uberspark_manifest_var_t)  Hashtbl.t) ->
    ((string, Uberspark.Manifest.uberspark_manifest_var_t)  Hashtbl.t) ->
    string ->
    string ->
    bool

val process_actions :
    ?p_in_order:bool ->
    string list ->
    (string * string) list ->
    bool

